create the k-means clustering algo to group customers of a retail store based on their purchase history


import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
df=pd.read_csv("/content/sample_data/Mall_Customers.csv")
df.head()
x=df[["Annual Income (k$)","Spending Score (1-100)"]]
scaler = StandardScaler()
x_scaled=scaler.fit_transform(x)
wcss=[]
for i in range(1,11):
  kmeans=KMeans(n_clusters=i,random_state=42,n_init=10)
  kmeans.fit(x_scaled)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(8,5))
plt.plot(range(1,11),wcss,marker=0,linestyle="--")
plt.xlabel("numbers of cluster")
plt.ylabel("wcss")
plt.title("elbow method to find the optimal cluster")
plt.show()
kmeans=KMeans(n_clusters=4,random_state=42,n_init=10)
df["cluster"]=kmeans.fit_predict(x_scaled)
plt.figure(figsize=(8, 5))
sns.scatterplot(x=df['Annual Income (k$)'], y=df['Spending Score (1-100)'], hue=df['cluster'], palette='viridis', s=100)
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.title('Customer Segmentation')
plt.show()
